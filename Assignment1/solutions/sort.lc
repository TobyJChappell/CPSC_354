let rec sort = \x. if x = # then x
		   else if le (hd x) (hd (tl x)) then (hd x) (sort (tl x))
		   else sort (append (append (tl x) (hd x)) #) in 

let rec le = \x. \y. if x = 0 then S 0
                     else if y = 0 then 0
                     else le (minus_one x) (minus_one y) in

let rec append = \x. \y. if x = # then y
                         else (hd x) (append (tl x) y) in

sort S S 0:S 0:#
